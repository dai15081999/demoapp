import Head from "next/head";
import Product from "../components/Product";
import apiModule from "../http";
import { useEffect, useState, useRef } from "react";
import Skeleton from "../components/Skeleton";
import Noty from "noty";
import socketInit from '../websocket'
import { useSelector } from "react-redux";
import Banner from "../components/Banner";

const Home = () => {
  const [products, setProducts] = useState([])
  const [page, setPage] = useState(1)
  const [loading, setLoading] = useState(false)
  const [loadingMore, setLoadingMore] = useState(false)
  const [firstLoad, setFirstLoad] = useState(false)
  const [displayButton, setDisplayButton] = useState(false)
  const socket = useRef(null)
  const {userInfo} = useSelector((state) => state.auth)

  const {getallProducts} = apiModule()

  useEffect(() => {
    if(userInfo?.auth) {
      socket.current = socketInit()
      socket.current.emit('newUser', userInfo?.user)
    }
  }, [])
  
  useEffect(() => {
   if(!firstLoad && page===1) {
    try {
      setLoading(true)
      const getall = async () => {
        const res = await getallProducts({page, size: 12})
        const all = res.data
        setProducts([...all])
        setLoading(false)
        setFirstLoad(true)
      }
      getall()
    } catch (error) {
      console.log(error)
      setLoading(false)
    }
   }
  }, [])

  useEffect(() => {
    if(firstLoad && page !==1) {
      try {
        setLoadingMore(true)
        const getMore = async () => {
          const res = await getallProducts({page, size: 12})
          const all = res.data
          if(all.length === 0) {
            new Noty({
              type: "warning",
              timeout: 1000,
              text: "Không tìm thêm được dữ liệu",
              progressBar: false,
            }).show();
            setDisplayButton(true)
          }
          setProducts([...products, ...all])
          setLoadingMore(false)
        } 
        getMore()
      } catch (error) {
        setLoadingMore(false)
      }
    }
  }, [page, firstLoad])
  
  return (
    <>
      <Head>
        <title>Bán tranh nghệ thuật</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head> 
      <Banner/>
      <div className="products">
      {loading ? [1,2,3,6,4,5,6,7,8,9,10,11].map((_, i) => <><Skeleton key={i}/></>) : products &&
          products.map((item, i) => <Product key={i} product={item} />)}
      </div>
      <div className="button_loadmore"><button disabled={displayButton} onClick={() => setPage(pre => pre + 1)}>{loadingMore ? 'Đang tải...' : 'Xem Thêm'}</button></div>
    </>
  );
};

export default Home;

