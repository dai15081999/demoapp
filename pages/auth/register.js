import { useState, useEffect } from "react";
// next modules
import { useRouter } from 'next/router';
import Head from "next/head";
// package
import Noty from "noty";
// redux
import { useDispatch, useSelector } from "react-redux";
// others
import { register } from "../../redux/authSlice";
import {resetMessage} from '../../redux/authSlice'


const Register = () => {
  const [password, setPassword] = useState("");
  const [confpassword, setConfpassword] = useState("");
  const [name, setName] = useState("");
  const [email, setEmail] = useState("");
  const dispatch = useDispatch();
  const router = useRouter()
  const { userInfo, loading, success, error } = useSelector((state) => state.auth);

  useEffect(() => {
    if(userInfo?.auth) {
      router.push('/auth/login')
    }
  }, [userInfo?.auth])

  const handleRegister = (e) => {
    e.preventDefault();
    if (!password || !email || !name) {
      new Noty({
        type: "error",
        timeout: 1500,
        text: "Không được bỏ trống mục nào",
        progressBar: true,
      }).show();
      return;
    }
    if (password !== confpassword) {
      new Noty({
        type: "error",
        timeout: 1500,
        text: "Mật khẩu không giống nhau",
        progressBar: true,
      }).show();
      return;
    }
    dispatch(register({ name, email, password }));
  }

  useEffect(() => {
    if (error) {
      new Noty({
        type: "error",
        timeout: 1500,
        text: `${error}`,
        progressBar: true,
      }).show();
      dispatch(resetMessage())
      return
    }
  }, [error])

  useEffect(() => {
    if (success) {
      new Noty({
        type: "success",
        timeout: 2500,
        text: `Đăng ký thành công, bây giờ bạn có thể đăng nhập...`,
        progressBar: true,
      }).show();
      router.replace('/auth/login')
      return;
    }
    router
  }, [success])

  return (
    <>
      <Head>
        <title>Đăng ký</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="form_auth">
        <div className="form-style-3">
          <form onSubmit={handleRegister}>
            <fieldset>
              <legend>Đăng ký</legend>
              <label for="field1">
                <span>
                  Tên<span className="required">*</span>
                </span>
                <input
                  onChange={(e) => setName(e.target.value)}
                  value={name}
                  type="text"
                  className="input-field"
                  name="field1"
                />
              </label>
              <label for="field2">
                <span>
                  Email <span className="required">*</span>
                </span>
                <input
                  onChange={(e) => setEmail(e.target.value)}
                  value={email}
                  type="email"
                  className="input-field"
                  name="field2"
                />
              </label>
              <label for="field3">
                <span>
                  Mật khẩu <span className="required">*</span>
                </span>
                <input
                  onChange={(e) => setPassword(e.target.value)}
                  value={password}
                  type="password"
                  className="input-field"
                  name="field3"
                />
              </label>

              <label for="field3">
                <span>
                  Xác nhận mật khẩu <span className="required">*</span>
                </span>
                <input
                  onChange={(e) => setConfpassword(e.target.value)}
                  value={confpassword}
                  type="password"
                  className="input-field"
                  name="field3"
                />
              </label>
            </fieldset>
            <fieldset>
              <input type="submit" value={loading ? "Xin chờ..." : "Đăng ký"} />
            </fieldset>
          </form>
        </div>
      </div>
    </>
  );
};

export default Register;
